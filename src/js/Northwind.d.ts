///<reference path="./jaydata.d.ts" />

/*//////////////////////////////////////////////////////////////////////////////////////
////// Autogenerated by JaySvcUtil.exe http://JayData.org for more info        /////////
//////                      oData  V2  TypeScript                              /////////
//////////////////////////////////////////////////////////////////////////////////////*/


declare module NorthwindModel {
  export class Category extends $data.Entity {
    constructor();
    constructor(initData: { CategoryID?: number; CategoryName?: string; Description?: string; Picture?: Uint8Array; Products?: NorthwindModel.Product[]; });
    CategoryID: number;
    CategoryName: string;
    Description: string;
    Picture: Uint8Array;
    Products: NorthwindModel.Product[];
    
  }
  
  export class CustomerDemographic extends $data.Entity {
    constructor();
    constructor(initData: { CustomerTypeID?: string; CustomerDesc?: string; Customers?: NorthwindModel.Customer[]; });
    CustomerTypeID: string;
    CustomerDesc: string;
    Customers: NorthwindModel.Customer[];
    
  }
  
  export class Customer extends $data.Entity {
    constructor();
    constructor(initData: { CustomerID?: string; CompanyName?: string; ContactName?: string; ContactTitle?: string; Address?: string; City?: string; Region?: string; PostalCode?: string; Country?: string; Phone?: string; Fax?: string; Orders?: NorthwindModel.Order[]; CustomerDemographics?: NorthwindModel.CustomerDemographic[]; });
    CustomerID: string;
    CompanyName: string;
    ContactName: string;
    ContactTitle: string;
    Address: string;
    City: string;
    Region: string;
    PostalCode: string;
    Country: string;
    Phone: string;
    Fax: string;
    Orders: NorthwindModel.Order[];
    CustomerDemographics: NorthwindModel.CustomerDemographic[];
    
  }
  
  export class Employee extends $data.Entity {
    constructor();
    constructor(initData: { EmployeeID?: number; LastName?: string; FirstName?: string; Title?: string; TitleOfCourtesy?: string; BirthDate?: Date; HireDate?: Date; Address?: string; City?: string; Region?: string; PostalCode?: string; Country?: string; HomePhone?: string; Extension?: string; Photo?: Uint8Array; Notes?: string; ReportsTo?: number; PhotoPath?: string; Employees1?: NorthwindModel.Employee[]; Employee1?: NorthwindModel.Employee; Orders?: NorthwindModel.Order[]; Territories?: NorthwindModel.Territory[]; });
    EmployeeID: number;
    LastName: string;
    FirstName: string;
    Title: string;
    TitleOfCourtesy: string;
    BirthDate: Date;
    HireDate: Date;
    Address: string;
    City: string;
    Region: string;
    PostalCode: string;
    Country: string;
    HomePhone: string;
    Extension: string;
    Photo: Uint8Array;
    Notes: string;
    ReportsTo: number;
    PhotoPath: string;
    Employees1: NorthwindModel.Employee[];
    Employee1: NorthwindModel.Employee;
    Orders: NorthwindModel.Order[];
    Territories: NorthwindModel.Territory[];
    
  }
  
  export class Order_Detail extends $data.Entity {
    constructor();
    constructor(initData: { OrderID?: number; ProductID?: number; UnitPrice?: string; Quantity?: number; Discount?: number; Order?: NorthwindModel.Order; Product?: NorthwindModel.Product; });
    OrderID: number;
    ProductID: number;
    UnitPrice: string;
    Quantity: number;
    Discount: number;
    Order: NorthwindModel.Order;
    Product: NorthwindModel.Product;
    
  }
  
  export class Order extends $data.Entity {
    constructor();
    constructor(initData: { OrderID?: number; CustomerID?: string; EmployeeID?: number; OrderDate?: Date; RequiredDate?: Date; ShippedDate?: Date; ShipVia?: number; Freight?: string; ShipName?: string; ShipAddress?: string; ShipCity?: string; ShipRegion?: string; ShipPostalCode?: string; ShipCountry?: string; Customer?: NorthwindModel.Customer; Employee?: NorthwindModel.Employee; Order_Details?: NorthwindModel.Order_Detail[]; Shipper?: NorthwindModel.Shipper; });
    OrderID: number;
    CustomerID: string;
    EmployeeID: number;
    OrderDate: Date;
    RequiredDate: Date;
    ShippedDate: Date;
    ShipVia: number;
    Freight: string;
    ShipName: string;
    ShipAddress: string;
    ShipCity: string;
    ShipRegion: string;
    ShipPostalCode: string;
    ShipCountry: string;
    Customer: NorthwindModel.Customer;
    Employee: NorthwindModel.Employee;
    Order_Details: NorthwindModel.Order_Detail[];
    Shipper: NorthwindModel.Shipper;
    
  }
  
  export class Product extends $data.Entity {
    constructor();
    constructor(initData: { ProductID?: number; ProductName?: string; SupplierID?: number; CategoryID?: number; QuantityPerUnit?: string; UnitPrice?: string; UnitsInStock?: number; UnitsOnOrder?: number; ReorderLevel?: number; Discontinued?: boolean; Category?: NorthwindModel.Category; Order_Details?: NorthwindModel.Order_Detail[]; Supplier?: NorthwindModel.Supplier; });
    ProductID: number;
    ProductName: string;
    SupplierID: number;
    CategoryID: number;
    QuantityPerUnit: string;
    UnitPrice: string;
    UnitsInStock: number;
    UnitsOnOrder: number;
    ReorderLevel: number;
    Discontinued: boolean;
    Category: NorthwindModel.Category;
    Order_Details: NorthwindModel.Order_Detail[];
    Supplier: NorthwindModel.Supplier;
    
  }
  
  export class Region extends $data.Entity {
    constructor();
    constructor(initData: { RegionID?: number; RegionDescription?: string; Territories?: NorthwindModel.Territory[]; });
    RegionID: number;
    RegionDescription: string;
    Territories: NorthwindModel.Territory[];
    
  }
  
  export class Shipper extends $data.Entity {
    constructor();
    constructor(initData: { ShipperID?: number; CompanyName?: string; Phone?: string; Orders?: NorthwindModel.Order[]; });
    ShipperID: number;
    CompanyName: string;
    Phone: string;
    Orders: NorthwindModel.Order[];
    
  }
  
  export class Supplier extends $data.Entity {
    constructor();
    constructor(initData: { SupplierID?: number; CompanyName?: string; ContactName?: string; ContactTitle?: string; Address?: string; City?: string; Region?: string; PostalCode?: string; Country?: string; Phone?: string; Fax?: string; HomePage?: string; Products?: NorthwindModel.Product[]; });
    SupplierID: number;
    CompanyName: string;
    ContactName: string;
    ContactTitle: string;
    Address: string;
    City: string;
    Region: string;
    PostalCode: string;
    Country: string;
    Phone: string;
    Fax: string;
    HomePage: string;
    Products: NorthwindModel.Product[];
    
  }
  
  export class Territory extends $data.Entity {
    constructor();
    constructor(initData: { TerritoryID?: string; TerritoryDescription?: string; RegionID?: number; Region?: NorthwindModel.Region; Employees?: NorthwindModel.Employee[]; });
    TerritoryID: string;
    TerritoryDescription: string;
    RegionID: number;
    Region: NorthwindModel.Region;
    Employees: NorthwindModel.Employee[];
    
  }
  
  export class Alphabetical_list_of_product extends $data.Entity {
    constructor();
    constructor(initData: { ProductID?: number; ProductName?: string; SupplierID?: number; CategoryID?: number; QuantityPerUnit?: string; UnitPrice?: string; UnitsInStock?: number; UnitsOnOrder?: number; ReorderLevel?: number; Discontinued?: boolean; CategoryName?: string; });
    ProductID: number;
    ProductName: string;
    SupplierID: number;
    CategoryID: number;
    QuantityPerUnit: string;
    UnitPrice: string;
    UnitsInStock: number;
    UnitsOnOrder: number;
    ReorderLevel: number;
    Discontinued: boolean;
    CategoryName: string;
    
  }
  
  export class Category_Sales_for_1997 extends $data.Entity {
    constructor();
    constructor(initData: { CategoryName?: string; CategorySales?: string; });
    CategoryName: string;
    CategorySales: string;
    
  }
  
  export class Current_Product_List extends $data.Entity {
    constructor();
    constructor(initData: { ProductID?: number; ProductName?: string; });
    ProductID: number;
    ProductName: string;
    
  }
  
  export class Customer_and_Suppliers_by_City extends $data.Entity {
    constructor();
    constructor(initData: { City?: string; CompanyName?: string; ContactName?: string; Relationship?: string; });
    City: string;
    CompanyName: string;
    ContactName: string;
    Relationship: string;
    
  }
  
  export class Invoice extends $data.Entity {
    constructor();
    constructor(initData: { ShipName?: string; ShipAddress?: string; ShipCity?: string; ShipRegion?: string; ShipPostalCode?: string; ShipCountry?: string; CustomerID?: string; CustomerName?: string; Address?: string; City?: string; Region?: string; PostalCode?: string; Country?: string; Salesperson?: string; OrderID?: number; OrderDate?: Date; RequiredDate?: Date; ShippedDate?: Date; ShipperName?: string; ProductID?: number; ProductName?: string; UnitPrice?: string; Quantity?: number; Discount?: number; ExtendedPrice?: string; Freight?: string; });
    ShipName: string;
    ShipAddress: string;
    ShipCity: string;
    ShipRegion: string;
    ShipPostalCode: string;
    ShipCountry: string;
    CustomerID: string;
    CustomerName: string;
    Address: string;
    City: string;
    Region: string;
    PostalCode: string;
    Country: string;
    Salesperson: string;
    OrderID: number;
    OrderDate: Date;
    RequiredDate: Date;
    ShippedDate: Date;
    ShipperName: string;
    ProductID: number;
    ProductName: string;
    UnitPrice: string;
    Quantity: number;
    Discount: number;
    ExtendedPrice: string;
    Freight: string;
    
  }
  
  export class Order_Details_Extended extends $data.Entity {
    constructor();
    constructor(initData: { OrderID?: number; ProductID?: number; ProductName?: string; UnitPrice?: string; Quantity?: number; Discount?: number; ExtendedPrice?: string; });
    OrderID: number;
    ProductID: number;
    ProductName: string;
    UnitPrice: string;
    Quantity: number;
    Discount: number;
    ExtendedPrice: string;
    
  }
  
  export class Order_Subtotal extends $data.Entity {
    constructor();
    constructor(initData: { OrderID?: number; Subtotal?: string; });
    OrderID: number;
    Subtotal: string;
    
  }
  
  export class Orders_Qry extends $data.Entity {
    constructor();
    constructor(initData: { OrderID?: number; CustomerID?: string; EmployeeID?: number; OrderDate?: Date; RequiredDate?: Date; ShippedDate?: Date; ShipVia?: number; Freight?: string; ShipName?: string; ShipAddress?: string; ShipCity?: string; ShipRegion?: string; ShipPostalCode?: string; ShipCountry?: string; CompanyName?: string; Address?: string; City?: string; Region?: string; PostalCode?: string; Country?: string; });
    OrderID: number;
    CustomerID: string;
    EmployeeID: number;
    OrderDate: Date;
    RequiredDate: Date;
    ShippedDate: Date;
    ShipVia: number;
    Freight: string;
    ShipName: string;
    ShipAddress: string;
    ShipCity: string;
    ShipRegion: string;
    ShipPostalCode: string;
    ShipCountry: string;
    CompanyName: string;
    Address: string;
    City: string;
    Region: string;
    PostalCode: string;
    Country: string;
    
  }
  
  export class Product_Sales_for_1997 extends $data.Entity {
    constructor();
    constructor(initData: { CategoryName?: string; ProductName?: string; ProductSales?: string; });
    CategoryName: string;
    ProductName: string;
    ProductSales: string;
    
  }
  
  export class Products_Above_Average_Price extends $data.Entity {
    constructor();
    constructor(initData: { ProductName?: string; UnitPrice?: string; });
    ProductName: string;
    UnitPrice: string;
    
  }
  
  export class Products_by_Category extends $data.Entity {
    constructor();
    constructor(initData: { CategoryName?: string; ProductName?: string; QuantityPerUnit?: string; UnitsInStock?: number; Discontinued?: boolean; });
    CategoryName: string;
    ProductName: string;
    QuantityPerUnit: string;
    UnitsInStock: number;
    Discontinued: boolean;
    
  }
  
  export class Sales_by_Category extends $data.Entity {
    constructor();
    constructor(initData: { CategoryID?: number; CategoryName?: string; ProductName?: string; ProductSales?: string; });
    CategoryID: number;
    CategoryName: string;
    ProductName: string;
    ProductSales: string;
    
  }
  
  export class Sales_Totals_by_Amount extends $data.Entity {
    constructor();
    constructor(initData: { SaleAmount?: string; OrderID?: number; CompanyName?: string; ShippedDate?: Date; });
    SaleAmount: string;
    OrderID: number;
    CompanyName: string;
    ShippedDate: Date;
    
  }
  
  export class Summary_of_Sales_by_Quarter extends $data.Entity {
    constructor();
    constructor(initData: { ShippedDate?: Date; OrderID?: number; Subtotal?: string; });
    ShippedDate: Date;
    OrderID: number;
    Subtotal: string;
    
  }
  
  export class Summary_of_Sales_by_Year extends $data.Entity {
    constructor();
    constructor(initData: { ShippedDate?: Date; OrderID?: number; Subtotal?: string; });
    ShippedDate: Date;
    OrderID: number;
    Subtotal: string;
    
  }
  
}

declare module ODataWebV3.Northwind.Model {
  export class NorthwindEntities extends $data.EntityContext {
    onReady(): $data.IPromise;
    onReady(handler: (context: NorthwindEntities) => void): $data.IPromise;
    
    Categories: $data.EntitySet<NorthwindModel.Category>;
    CustomerDemographics: $data.EntitySet<NorthwindModel.CustomerDemographic>;
    Customers: $data.EntitySet<NorthwindModel.Customer>;
    Employees: $data.EntitySet<NorthwindModel.Employee>;
    Order_Details: $data.EntitySet<NorthwindModel.Order_Detail>;
    Orders: $data.EntitySet<NorthwindModel.Order>;
    Products: $data.EntitySet<NorthwindModel.Product>;
    Regions: $data.EntitySet<NorthwindModel.Region>;
    Shippers: $data.EntitySet<NorthwindModel.Shipper>;
    Suppliers: $data.EntitySet<NorthwindModel.Supplier>;
    Territories: $data.EntitySet<NorthwindModel.Territory>;
    Alphabetical_list_of_products: $data.EntitySet<NorthwindModel.Alphabetical_list_of_product>;
    Category_Sales_for_1997: $data.EntitySet<NorthwindModel.Category_Sales_for_1997>;
    Current_Product_Lists: $data.EntitySet<NorthwindModel.Current_Product_List>;
    Customer_and_Suppliers_by_Cities: $data.EntitySet<NorthwindModel.Customer_and_Suppliers_by_City>;
    Invoices: $data.EntitySet<NorthwindModel.Invoice>;
    Order_Details_Extendeds: $data.EntitySet<NorthwindModel.Order_Details_Extended>;
    Order_Subtotals: $data.EntitySet<NorthwindModel.Order_Subtotal>;
    Orders_Qries: $data.EntitySet<NorthwindModel.Orders_Qry>;
    Product_Sales_for_1997: $data.EntitySet<NorthwindModel.Product_Sales_for_1997>;
    Products_Above_Average_Prices: $data.EntitySet<NorthwindModel.Products_Above_Average_Price>;
    Products_by_Categories: $data.EntitySet<NorthwindModel.Products_by_Category>;
    Sales_by_Categories: $data.EntitySet<NorthwindModel.Sales_by_Category>;
    Sales_Totals_by_Amounts: $data.EntitySet<NorthwindModel.Sales_Totals_by_Amount>;
    Summary_of_Sales_by_Quarters: $data.EntitySet<NorthwindModel.Summary_of_Sales_by_Quarter>;
    Summary_of_Sales_by_Years: $data.EntitySet<NorthwindModel.Summary_of_Sales_by_Year>;
    
  }

}
